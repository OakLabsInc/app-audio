doctype html
html(ng-app="audioApp")
  head
    link(href='/css/index.css', rel='stylesheet', type='text/css')
    link(href='css/vendor/angular-material.min.css', rel='stylesheet', type='text/css')
  body(ng-controller="appController" ng-click="tapped($event)" ng-mousemove="mouseMoved($event)" ng-cloak)
    ripples
      .ripple(ng-repeat="r in ripples", ng-style="{ top: r.y + 'px', left: r.x + 'px' }")
    div
      md-card(layout="column" layout-align="center center" layout-padding='' ng-cloak)
        md-card-content(flex layout="column" layout-align="center center")
          h1 Audio Card Source
          p(ng-bind='installProgress')
          md-progress-linear(md-mode="indeterminate" ng-if="installProgress != ''")
        md-card-footer(layout="row" layout-align="center center" layout-margin)
            md-button.md-primary.md-raised(ng-repeat="card in cards" ng-click="setAlsaCard(card)" ng-disabled="(card.toLowerCase() == selectedCard.card.toLowerCase()) || installProgress != ''") Use {{card}} 
      md-card(layout="column" layout-align="center center" layout-padding=''  ng-cloak)
        md-card-content(ng-if="!selectedCard.mixers.length" flex layout="column" layout-align="center center")
          h3 Please select a card to use.
        md-card-content(flex layout="column" layout-align="center center")
          h1 {{selectedCard.card}}
        md-card-footer(layout="column" layout-align="center center")
          
          div(layout="row" layout-align="space-between top" ng-repeat="mixer in selectedCard.mixers")
            h3(flex="40") {{mixer.name}}
            div(flex="60")
              md-slider-container
                div Volume
                md-slider(ng-model="mixer.setting.configuration.volume" md-discrete min="0" max="100" ng-change="setAlsaCardConfiguration(mixer)")
              md-slider-container
                div {{mixer.setting.configuration.mute?'Unmute':'Mute'}}
                md-switch(ng-model="mixer.setting.configuration.mute" aria-label="Mute" ng-change="setAlsaCardConfiguration(mixer)")
            
      md-card(layout="column" layout-align="center center" layout-padding='' ng-cloak)
        md-card-content(flex layout="column" layout-align="center center")
          h1 Audio Tests
        md-card-footer(layout="column" layout-align="center center")
          md-input-container
            md-button.md-primary.md-raised(id="action" onclick="handleAction()") Record for 3 seconds
          md-input-container
            audio(controls  controlsList="nodownload")
              source(src="/sounds/LRMonoPhase4.wav" type="audio/wav")
    //- script(src="/javascript/index.js")
    script(style="display:none").
      const recordAudio = () =>
      new Promise(async resolve => {
        const stream = await navigator.mediaDevices.getUserMedia({ audio: true })
        const mediaRecorder = new MediaRecorder(stream)
        const audioChunks = []

        mediaRecorder.addEventListener('dataavailable', event => {
          audioChunks.push(event.data)
        })

        const start = () => mediaRecorder.start()

        const stop = () =>
          new Promise(resolve => {
            mediaRecorder.addEventListener('stop', () => {
              const audioBlob = new Blob(audioChunks)
              const audioUrl = URL.createObjectURL(audioBlob)
              const audio = new Audio(audioUrl)
              const play = () => audio.play()
              resolve({ audioBlob, audioUrl, play })
            })

            mediaRecorder.stop()
          })

        resolve({ start, stop })
      })

      const sleep = time => new Promise(resolve => setTimeout(resolve, time))

      const handleAction = async () => {
        const recorder = await recordAudio()
        const actionButton = document.getElementById('action')
        actionButton.disabled = true
        recorder.start()
        await sleep(3000)
        const audio = await recorder.stop()
        audio.play()
        await sleep(3000)
        actionButton.disabled = false
      }


